@using System.Collections
@model IEnumerable<FurnStore.Models.Product>


@{
    ViewData["Title"] = "Rented products";
}

<div class="text-center">
    <h1 style="margin-bottom:2%; margin-top:3%;">Rented Products</h1>

    @if (!Model.Any())
    {
        <p style="margin-bottom:10% ;">
            You have no rented products. Rent some here:
            <a href="http://localhost:5227/Rent">
                <button class="btn btn-outline-dark">Rent</button>
            </a>
        </p>
    }

    else
    {
        <p style="margin-bottom:10% ;">Products: @ViewData["ProductCount"]</p>

        <form asp-action="ClearList" method="post">
            <button type="submit" onclick="ClearAlert()" class="btn btn-outline-secondary">Clear List</button>
        </form>
    }

    <script>
        function ClearAlert() {
            alert('List have been cleared');

        }
    </script>

    <table class="table table-borderless table-hover" style="margin-bottom: 300px;">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(item => item.Name)
                </th>

                <th>
                    @Html.DisplayNameFor(item => item.Description)
                </th>

                <th>
                    @Html.DisplayNameFor(item => item.Material)
                </th>

                <th>
                    @Html.DisplayNameFor(item => item.Price)
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Material)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>

                        <td>
                            <form asp-action="CancelRent" asp-route-id="@item.Id" method="post">
                                <button type="submit" class="btn btn-outline-danger">Cancel Renting</button>
                            </form>
                        </td>

                        <td>
                            <img style="width: 400px; margin-left: 100px;" src="@Html.DisplayFor(modelItem => item.ImageUrl)" />
                        </td>
                    </tr>
                }
            }

        </tbody>

    </table>

    <h1 style="margin-bottom: 50px;">Checkout</h1>

    <div class="container"
         style="background-color:rgb(245, 245, 245); width: 600px; border-bottom-left-radius: 30px 30px; border-bottom-right-radius: 30px 30px; border-top-right-radius:30px 30px; border-top-left-radius: 30px 30px;">
        <br>
        <div>

            @if (Model is not null)
            {
                int count = 1;
                foreach (var item in Model)
                {
                    <p>@count - @Html.DisplayFor(p => item.Price) kr.</p>
                    count++;
                }
            }

        </div>
        <hr />

        @if (ViewData["ProductCount"] is > 0)
        {
            <p>Shipping price: @ViewData["ShippingPrice"]</p>
            <hr />
            <p>Total price: @ViewData["TotalPrice"]</p>
        }

        else
        {
            <p>Total price: @ViewData["PriceSum"]</p>
        }

        <br>
    </div>

    <script>
        const totop = () => window.scrollTo(0, 0)
    </script>

    <button style="margin-top:5%;" class="btn btn-outline-dark" onclick="totop()">
        Back to top
    </button>
</div>